// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationMVCBatch3.Models;

#nullable disable

namespace WebApplicationMVCBatch3.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20250625111624_Emp Test1")]
    partial class EmpTest1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Emp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("emps");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Husband", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wifeRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("wifeRefID");

                    b.ToTable("husbands");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Location", b =>
                {
                    b.Property<int>("EmpID")
                        .HasColumnType("int");

                    b.Property<string>("LocAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpID");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.One", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("twoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("twoId");

                    b.ToTable("ones");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<string>("OrderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.ToTable("tbl_NewOrders");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.PatientAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientID")
                        .IsUnique();

                    b.ToTable("patientAddress");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Two", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OneEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("twos");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("userProfile");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Tbl_EmpData");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Wife", b =>
                {
                    b.Property<int>("RefID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefID"));

                    b.Property<string>("WName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefID");

                    b.ToTable("wives");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Husband", b =>
                {
                    b.HasOne("WebApplicationMVCBatch3.Models.Wife", "wife")
                        .WithMany()
                        .HasForeignKey("wifeRefID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("wife");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Location", b =>
                {
                    b.HasOne("WebApplicationMVCBatch3.Models.Emp", "Emp")
                        .WithOne("Location")
                        .HasForeignKey("WebApplicationMVCBatch3.Models.Location", "EmpID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.One", b =>
                {
                    b.HasOne("WebApplicationMVCBatch3.Models.Two", "two")
                        .WithMany()
                        .HasForeignKey("twoId");

                    b.Navigation("two");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.PatientAddress", b =>
                {
                    b.HasOne("WebApplicationMVCBatch3.Models.Patient", "Patient")
                        .WithOne("PatientAddress")
                        .HasForeignKey("WebApplicationMVCBatch3.Models.PatientAddress", "PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.UserProfile", b =>
                {
                    b.HasOne("WebApplicationMVCBatch3.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("WebApplicationMVCBatch3.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Emp", b =>
                {
                    b.Navigation("Location");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.Patient", b =>
                {
                    b.Navigation("PatientAddress");
                });

            modelBuilder.Entity("WebApplicationMVCBatch3.Models.User", b =>
                {
                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
